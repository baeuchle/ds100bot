#!/usr/bin/python3

"""Twitter-Bot für die Expansion Abkürzungen"""

import argparse
import configparser
import logging

from AnswerMachine import handle_list
from Externals import setup_database, set_arguments, setup_network, test_network_arguments
import Persistence

logger = Persistence.init_logger()

if __name__ == "__main__":
    parser = argparse.ArgumentParser(description=__doc__)
    Persistence.set_logging_args(parser)
    set_arguments(parser)
    parser.add_argument('--no-version',
                        dest='notify_version',
                        help='Do not send out version status and do not store last version',
                        required=False,
                        action='store_false',
                        default=True)
    args = parser.parse_args()
    configuration = configparser.ConfigParser()
    configuration.read(args.config)
    args.config = configuration
    network_name = test_network_arguments(args)
    logger.setLevel(getattr(logging, args.log_level))
    logger.debug("%s bot running args: %s", network_name, args)
    logging.getLogger('msg').setLevel(getattr(logging, args.log_level))
    try:
        database = setup_database(args, network_name)
        network = setup_network(network_name, args, Persistence.get_since_id(database))
        if args.notify_version:
            Persistence.notify_new_version(network, database)

        magic_tags, magic_emojis = database.magic_hashtags()
        handle_list(network=network,
                    database=database,
                    magic_tags=magic_tags,
                    magic_emojis=magic_emojis)
        if args.notify_version:
            Persistence.store_version(database)
        Persistence.store_since_id(database, network)
        database.close_sucessfully()
    except RuntimeError as re:
        logger.exception("Failure for network %s", network_name)
        raise SystemExit(1) from re
    logger.info("Bot finished")
